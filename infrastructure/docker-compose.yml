version: '3.8'

services:
  python-service:
    build:
      context: ../python-service
      dockerfile: Dockerfile
    ports:
      - "9443:9443"
    volumes:
      - ../model:/model
    environment:
      - MODEL_PATH=/model/fraud_gnn.onnx
      - SERVICE_PORT=9443
      - SERVICE_HOST=0.0.0.0
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc      
      - OTEL_METRICS_EXPORTER=none
    networks: [graphshield-net]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9443/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s
    restart: unless-stopped
    depends_on: [jaeger]

  java-service:
    build:
      context: ../java-service
      dockerfile: Dockerfile.jvm
    ports:
      - "9444:9444"
    volumes:
      - ../model:/model
    environment:
      - GRAPHSHIELD_MODEL_PATH=/model/fraud_gnn.onnx
      - QUARKUS_HTTP_PORT=9444
      - QUARKUS_HTTP_HOST=0.0.0.0
      - QUARKUS_OTEL_ENABLED=true
      - QUARKUS_OTEL_TRACES_EXPORTER=otlp
      - QUARKUS_OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
    networks: [graphshield-net]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9444/q/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    depends_on: [jaeger]

  prometheus:
    image: prom/prometheus:v2.45.0
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/alerts.yml:/etc/prometheus/alerts.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
    ports: ["9090:9090"]
    networks: [graphshield-net]
    restart: unless-stopped

  grafana:
    image: grafana/grafana:10.1.0
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=graphshield
      - GF_USERS_ALLOW_SIGN_UP=false
    ports: ["3000:3000"]
    networks: [graphshield-net]
    depends_on: [prometheus]
    restart: unless-stopped

  jaeger:
    image: jaegertracing/all-in-one:1.49
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "16686:16686"
      - "14250:14250"
      - "14268:14268"
      - "14269:14269"
      - "4317:4317"
      - "4318:4318"
      - "9411:9411"
    networks: [graphshield-net]
    restart: unless-stopped

networks:
  graphshield-net:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data:
